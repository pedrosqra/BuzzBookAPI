// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  hash      String
  firstName String?
  lastName  String?
  Address   Address[]
  Order     Order[]
}

model Book {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String
  author       String
  description  String?
  price        Float
  bookQuantity Int
  orders       Order[]
  categoryId   Int
  category     Category @relation(fields: [categoryId], references: [id])
}

model Address {
  id         Int    @id @default(autoincrement())
  street     String
  district   String
  postalCode String
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Int
  status    String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}
